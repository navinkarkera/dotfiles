endpoint: https://tasks.opencraft.com/
user: navinkarkera
password-source: pass
password-name: opencraft-jira-navinkarkera

queries:
  todo: |
    resolution = unresolved {{if .project}}AND project = '{{.project}}'{{end}} AND status = 'To Do' AND (assignee=currentuser() OR "Reviewer 1"=currentuser() OR "Reviewer 2"=currentuser())
  in-progress: |
    resolution = unresolved {{if .project}}AND project = '{{.project}}'{{end}} AND status = 'In Progress' AND (assignee=currentuser() OR "Reviewer 1"=currentuser() OR "Reviewer 2"=currentuser())
  in-review: |
    resolution = unresolved {{if .project}}AND project = '{{.project}}'{{end}} AND status = 'In Review' AND (assignee=currentuser() OR "Reviewer 1"=currentuser() OR "Reviewer 2"=currentuser())
  backlog: |
    resolution = unresolved {{if .project}}AND project = '{{.project}}'{{end}} AND status = 'Backlog' AND (assignee=currentuser() OR "Reviewer 1"=currentuser() OR "Reviewer 2"=currentuser())
  mine: |
    resolution = unresolved {{if .project}}AND project = '{{.project}}'{{end}} AND (assignee=currentuser() OR "Reviewer 1"=currentuser() OR "Reviewer 2"=currentuser())
  all: |
    resolution = unresolved {{if .project}}AND project = '{{.project}}'{{end}} ORDER BY priority asc, created

custom-commands:
  - name: sprint
    help: display issues for active sprint
    script: |-
      if [ -n "$JIRA_PROJECT" ]; then
          # if `project: ...` configured just list the issues for current project
          {{jira}} list --template table --query "sprint in openSprints() and assignee=currentuser() and type != epic and resolution = unresolved and project=$JIRA_PROJECT ORDER BY rank asc, created" | bat --paging=always --style=plain
      else
          # otherwise list issues for all project
          {{jira}} list --template table --query "sprint in openSprints() and assignee=currentuser() and type != epic and status != Done and status != Recurring and status != Archived and created > -30d  ORDER BY rank asc, created" | bat --paging=always --style=plain
      fi
  - name: text-update
    help: display issues for active sprint
    args:
      - name: issueList
    script: |-
      {{jira}} list --template markdown_list --query "(sprint in openSprints() and (assignee=currentuser() OR \"Reviewer 1\"=currentuser() OR \"Reviewer 2\"=currentuser() OR \"Core Committer\"=currentuser()) and type != epic and status != Recurring and created > -30d) or (issue in ({{args.issueList}})) ORDER BY rank asc, created"
  - name: table-update
    help: display issues for active sprint
    args:
      - name: issueList
      - name: sprintNumber
    script: |-
      {{jira}} list --template table --query "(sprint{{if args.sprintNumber}}={{args.sprintNumber}}{{else}} in openSprints(){{end}} and (assignee=currentuser() OR \"Reviewer 1\"=currentuser() OR \"Reviewer 2\"=currentuser() OR \"Core Committer\"=currentuser()) and type != epic and status != Recurring and created > -30d) or (issue in ({{args.issueList}})) ORDER BY rank asc, created"
  - name: mine
    help: display issues assigned to me
    script: |-
      if [ -n "$JIRA_PROJECT" ]; then
          # if `project: ...` configured just list the issues for current project
          {{jira}} list --template table --query "(sprint in openSprints() OR sprint in futureSprints()) and resolution = unresolved and (assignee=currentuser() OR 'Reviewer 1'=currentuser() OR 'Reviewer 2'=currentuser()) and project = $JIRA_PROJECT status != Archived and status != Done and status != \"External Review / Blocker\" ORDER BY priority asc, created"
      else
          # otherwise list issues for all project
          {{jira}} list --template table --query "(sprint in openSprints() OR sprint in futureSprints()) and resolution = unresolved and (assignee=currentuser() OR 'Reviewer 1'=currentuser() OR 'Reviewer 2'=currentuser()) and status != Archived and status != Done and status != \"External Review / Blocker\" ORDER BY priority asc, created"
      fi
  - name: available
    help: display issues not assignee to anyone
    script: |-
      {{jira}} list --query "assignee = EMPTY and project = 'FAL' and resolution = unresolved and sprint in futureSprints() and sprint != 'Last resort - Accepted' and sprint != 'Last resort - Proposed'"
  - name: ls-named-query-fzf
    aliases:
      - lf
    help: ls with named queries using fzf interface
    args:
      - name: query
    script: |-
      {{jira}} ls -n {{if args.query}}{{args.query}}{{else}} all{{end}} | \
        echo $(fzf --preview="echo {} | cut -d : -f 1 | xargs -I % sh -c '[ -f /tmp/%.yaml ] && bat --style=plain --color=always /tmp/%.yaml || gojira view % > /tmp/%.yaml && bat --style=plain --color=always /tmp/%.yaml'" --preview-window=70%,border-double,bottom --bind 'ctrl-o:execute-silent(gojira view -b $(echo {+} | cut -d : -f 1))') |\
        cut -d : -f 1 |\
        xargs -I % sh -c 'echo %'
  - name: quick-create
    aliases:
        - qc
    help: quick create jira ticket using web ui
    options:
      - name: type
        default: 3
      - name: priority
        default: 3
      - name: summary
        default: Title
      - name: project
        default: FAL
      - name: epic
      - name: account

    script: |
      board_name="Falcon"

      echo "Creaing issue on project $JIRA_PROJECT ($project_id), board $board_name ($board_id)"

      url="https://tasks.opencraft.com/secure/CreateIssueDetails%21init.jspa?"
      url+="&issuetype={{options.type}}"
      url+="&priority={{options.priority}}"
      url+="&pid={{options.project}}"

      if [[ "{{ options.account }}" != "<no value>" ]]; then
        url+="&customfield_10011={{options.account}}"
      fi

      if [[ "{{ options.epic }}" != "<no value>" ]]; then
        url+="&customfield_10007=key:{{ options.epic }}"
      fi
      url+="&summary={{options.summary}}"

      echo "\nURL: $url"
      zen-browser "$url"
